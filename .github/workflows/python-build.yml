name: build-python-dist

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish package (y/n)'
        default: 'n'
#  push:
#    branches: [master]
#    tags: ["v*.*.*"]
#  pull_request:
#    branches: [master]

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install cibuildwheel
      run: python3 -m pip install cibuildwheel==2.12.1

    - name: Build wheels
      run: python3 -m cibuildwheel --output-dir wheelhouse wrappers/python
      env:
        CIBW_BUILD: cp39-* cp310-* cp311-*
        CIBW_SKIP: "*musllinux*"
        CIBW_ARCHS_MACOS: universal2
        CIBW_ENVIRONMENT_MACOS: CMAKE_OSX_ARCHITECTURES="arm64;x86_64"

    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Build sdist
      working-directory: wrappers/python
      run: python3 setup.py sdist

    - uses: actions/upload-artifact@v3
      with:
        path: wrappers/python/dist/*.tar.gz

  upload-pypi:
    name: Deploy
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    # only run if the commit is tagged...
#    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    if: github.event_name == 'release' || github.event.inputs.publish == 'y'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # To test: repository_url: https://test.pypi.org/legacy/
